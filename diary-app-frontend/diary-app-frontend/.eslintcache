[{"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\index.js":"1","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\App.js":"2","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\login\\Login.jsx":"4","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\navigation\\NavBar.jsx":"5","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\routers\\MainRouter.jsx":"6","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\home\\Home.jsx":"7","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContainer.jsx":"8","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\AppContent.jsx":"9","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\SideNav.jsx":"10","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\diary\\Diary.jsx":"11","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\diaryForm\\DiaryForm.jsx":"12","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\signUp\\SignUp.jsx":"13","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\routers\\AppRouter.jsx":"14","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\noSelection\\NoSelection.jsx":"15","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\UserDataService.js":"16","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\DiaryDataService.js":"17","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\Entry.jsx":"18","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\Entries.jsx":"19","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\accountSettings\\AccountSettings.jsx":"20","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\EntryForm.jsx":"21","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\EntryDataService.js":"22"},{"size":650,"mtime":1608597904249,"results":"23","hashOfConfig":"24"},{"size":234,"mtime":1608046844653,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":3862,"mtime":1608597904229,"results":"27","hashOfConfig":"24"},{"size":1908,"mtime":1608337800920,"results":"28","hashOfConfig":"24"},{"size":1289,"mtime":1608597904257,"results":"29","hashOfConfig":"24"},{"size":1234,"mtime":1608597904217,"results":"30","hashOfConfig":"24"},{"size":395,"mtime":1608285077764,"results":"31","hashOfConfig":"24"},{"size":503,"mtime":1608337800838,"results":"32","hashOfConfig":"24"},{"size":2194,"mtime":1608597904217,"results":"33","hashOfConfig":"24"},{"size":792,"mtime":1608597904237,"results":"34","hashOfConfig":"24"},{"size":2895,"mtime":1608597904225,"results":"35","hashOfConfig":"24"},{"size":4992,"mtime":1608597904257,"results":"36","hashOfConfig":"24"},{"size":1073,"mtime":1608597904245,"results":"37","hashOfConfig":"24"},{"size":424,"mtime":1608337800907,"results":"38","hashOfConfig":"24"},{"size":705,"mtime":1608597904257,"results":"39","hashOfConfig":"24"},{"size":307,"mtime":1608597904253,"results":"40","hashOfConfig":"24"},{"size":3726,"mtime":1608597904189,"results":"41","hashOfConfig":"24"},{"size":2110,"mtime":1608597904173,"results":"42","hashOfConfig":"24"},{"size":10911,"mtime":1608597904137,"results":"43","hashOfConfig":"24"},{"size":2031,"mtime":1608597904241,"results":"44","hashOfConfig":"24"},{"size":312,"mtime":1608597904245,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1uq8z7d",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\index.js",[],["107","108"],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\App.js",["109"],"import './App.css';\r\nimport Login from './components/login/Login';\r\nimport MainRouter from './components/routers/MainRouter';\r\n\r\nfunction App() {\r\n  return(\r\n    <div>\r\n      <MainRouter/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\login\\Login.jsx",["110","111"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserDataService from \"../service/UserDataService\";\r\nimport Axios from \"axios\";\r\n\r\nimport \"./Login.css\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      user: {},\r\n    };\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  //Authenticates user credentials and stores JWT in local storage\r\n  handleLogin(event) {\r\n    event.preventDefault();\r\n    const loginData = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const instance = Axios.create();\r\n    //Removing auth header for sign in request\r\n    delete instance.defaults.headers.common[\"Authorization\"];\r\n    instance\r\n      .post(\"http://localhost:8080/api/auth/sign_in\", loginData)\r\n      .then((response) => {\r\n        console.log(response);\r\n        localStorage.setItem(\"token\", response.data.authToken);\r\n\r\n        this.props.history.push(`/app`);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Wrong username or password\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-login\">\r\n        <Box boxShadow={4} className=\"center-screen login-box\">\r\n          <Grid container spacing={0}>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={4}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n            >\r\n              <form noValidate autoComplete=\"off\" onSubmit={this.handleLogin}>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  spacing={5}\r\n                >\r\n                  <Grid item xs={12} className=\"logo\">\r\n                    <div className=\"div-size\"></div>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Username\"\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      variant=\"outlined\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\r\n                      Sign In\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                      <Link className=\"link-style\" to=\"/signup\">\r\n                        Register\r\n                      </Link>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n\r\n            <Grid item xs={8} className=\"login-banner\"></Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\navigation\\NavBar.jsx",["112"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function LabelBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"recents\");\r\n\r\n  let history = useHistory();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  function handleLogoutClick() {\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      boxShadow={4}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      display=\"flex\"\r\n      className=\"bottom nav\"\r\n    >\r\n      <BottomNavigation\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={classes.root}\r\n      >\r\n        <BottomNavigationAction\r\n          label=\"Diaries\"\r\n          value=\"recents\"\r\n          onClick={() => {\r\n            history.push(\"/app\");\r\n          }}\r\n          icon={<MenuBookIcon />}\r\n        />\r\n        <BottomNavigationAction\r\n          label=\"Settings\"\r\n          value=\"favorites\"\r\n          icon={<AccountCircleIcon />}\r\n          onClick={() => {\r\n            history.push(\"/app/account\");\r\n          }}\r\n        />\r\n        <BottomNavigationAction\r\n          label=\"Sign Out\"\r\n          value=\"folder\"\r\n          onClick={handleLogoutClick}\r\n          icon={<ExitToAppIcon />}\r\n        />\r\n      </BottomNavigation>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\routers\\MainRouter.jsx",[],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\home\\Home.jsx",["113"],"import { ContactSupportOutlined } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport AppContainer from \"../AppContainer/AppContainer\";\r\nimport NavBar from \"../navigation/NavBar\";\r\nimport UserDataService from \"../service/UserDataService\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n    };\r\n  }\r\n\r\n  refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // const config = {\r\n    //   headers: {\r\n    //     Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    //   },\r\n    // };\r\n\r\n    UserDataService.retrieveUser()\r\n      .then((response) => {\r\n        this.setState({\r\n          user: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.user) {\r\n      return (\r\n        <div className=\"bg\">\r\n          <AppContainer firstName={this.state.user.firstName} />\r\n          <NavBar />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"bg\">\r\n          <AppContainer />\r\n          <NavBar />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContainer.jsx",[],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\AppContent.jsx",["114","115","116","117"],"import React from \"react\";\r\nimport \"./AppContent.css\";\r\nimport NoSelection from \"./noSelection/NoSelection\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AppRouter from \"../../routers/AppRouter\";\r\n\r\nfunction AppContent() {\r\n  return (\r\n    <div className=\"appContent\">\r\n      {/* <Route exact component={NoSelection}></Route>\r\n      <Route path=\"/home/entries\" component={AllEntries} /> */}\r\n      <AppRouter />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppContent;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\SideNav.jsx",["118"],"import { Box, Button } from \"@material-ui/core\";\r\nimport Diary from \"./diary/Diary\";\r\nimport \"./SideNav.css\";\r\nimport Modal from \"react-modal\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DiaryForm from \"./diaryForm/DiaryForm\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport DiaryDataService from \"../../service/DiaryDataService\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction SideNav(props) {\r\n  const [clickedNewDiary, setClickedNewDiary] = useState(false);\r\n  const [userDiaries, setUserDiaries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      //await means to wait for response to comeback before doing something.\r\n      const request = await DiaryDataService.getDiariesByUsername();\r\n      setUserDiaries(request.data);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function handleNewDiaryClick() {\r\n    setClickedNewDiary(true);\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setClickedNewDiary(false);\r\n  }\r\n\r\n  return (\r\n    <nav id=\"mySideNav\" className=\"sideNav\">\r\n      <img\r\n        className=\"profile_img\"\r\n        src=\"https://www.pngkey.com/png/full/73-730477_first-name-profile-image-placeholder-png.png\"\r\n      />\r\n      <p>{props.firstName}</p>\r\n      <div className=\"nav_divider_top\"></div>\r\n      <Box textAlign=\"center\" mt={2}>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          onClick={() => handleNewDiaryClick()}\r\n          startIcon={<CloudUploadIcon />}\r\n        >\r\n          Add Diary\r\n        </Button>\r\n      </Box>\r\n      {userDiaries.map((diary) => (\r\n        <Diary\r\n          key={diary.id}\r\n          name={diary.name}\r\n          color={diary.color}\r\n          id={diary.id}\r\n        />\r\n      ))}\r\n\r\n      <Modal\r\n        className=\"Modal\"\r\n        isOpen={clickedNewDiary}\r\n        onRequestClose={() => setClickedNewDiary(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"white\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n          },\r\n        }}\r\n      >\r\n        <DiaryForm closeModal={handleCloseModal} />\r\n      </Modal>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideNav);\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\diary\\Diary.jsx",[],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\SideNav\\diaryForm\\DiaryForm.jsx",[],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\signUp\\SignUp.jsx",["119"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserDataService from \"../service/UserDataService\";\r\n\r\nimport \"./SignUp.css\";\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      user: {},\r\n    };\r\n    this.handleSignUp = this.handleSignUp.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSignUp(event) {\r\n    event.preventDefault();\r\n\r\n    const signUpData = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      email: this.state.email,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    UserDataService.registerUser(signUpData)\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    this.props.history.push(`/login`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-signUp\">\r\n        <Box boxShadow={4} className=\"center-screen signUp-box\">\r\n          <Grid container spacing={0}>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={4}\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n            >\r\n              <form\r\n                className\r\n                noValidate\r\n                autoComplete=\"off\"\r\n                onSubmit={this.handleSignUp}\r\n              >\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                  direction=\"column\"\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                  spacing={3}\r\n                >\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">Registration</Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"First Name\"\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      variant=\"filled\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Last Name\"\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      variant=\"filled\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      variant=\"filled\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Username\"\r\n                      variant=\"filled\"\r\n                      name=\"username\"\r\n                      type=\"username\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"outlined-basic\"\r\n                      label=\"Password\"\r\n                      variant=\"filled\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      // disabled=\"true\"\r\n                    >\r\n                      Complete\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Link to=\"/\" className=\"signup-link-style\">\r\n                      Already have an account?\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n\r\n            <Grid item xs={8} className=\"signUp-banner\"></Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\routers\\AppRouter.jsx",["120"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NoSelection from \"../AppContainer/AppContent/noSelection/NoSelection\";\r\nimport Entries from \"../AppContainer/AppContent/entry/Entries\";\r\nimport AccountSettings from \"../AppContainer/AppContent/accountSettings/AccountSettings\";\r\nimport EntryForm from \"../AppContainer/AppContent/entry/EntryForm\";\r\nclass AppRouter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/app\" component={NoSelection} />\r\n          <Route path=\"/app/diary/:diaryId/entry\" component={EntryForm} />\r\n          <Route\r\n            path=\"/app/diary/:diaryId\"\r\n            component={(props) => (\r\n              <Entries {...props} key={window.location.pathname} />\r\n            )}\r\n          />\r\n          <Route path=\"/app/account\" component={AccountSettings} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\noSelection\\NoSelection.jsx",["121","122"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./NoSelection.css\";\r\nimport Image from \"../../../../img/undraw_upload_87y9.png\";\r\n\r\nexport default function NoSelection() {\r\n  return (\r\n    <div className=\"center_no_selection\">\r\n      <img src={Image} className=\"upload_image\"></img>\r\n      <Typography>Please Select a Diary or Add and Select One</Typography>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\UserDataService.js",["123"],"import axios from 'axios'; \r\n\r\nclass UserDataService{\r\n\r\n    registerUser(signUpRequest){\r\n        return axios.post(`http://localhost:8080/api/auth/register`, signUpRequest)\r\n    }\r\n\r\n    authenticateUser(loginRequest){\r\n        return axios.post(`http://localhost:8080/api/auth/sign_in`, loginRequest)\r\n    }\r\n\r\n    retrieveUser(config){\r\n        return axios.get(`http://localhost:8080/api/auth/user`, config)\r\n    }\r\n\r\n    updateUserDetails(userUpdateRequest){\r\n        return axios.put(`http://localhost:8080/api/auth/user`, userUpdateRequest)\r\n    }\r\n\r\n    deleteUserByUsername(){\r\n        return axios.delete(`http://localhost:8080/api/auth/user`)\r\n    }\r\n\r\n}\r\n\r\nexport default new UserDataService;","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\DiaryDataService.js",["124"],"import axios from 'axios'; \r\n\r\nclass DiaryDataService{\r\n\r\n    createDiary(diary){\r\n        return axios.post(`http://localhost:8080/api/diaries`, diary)\r\n    }\r\n\r\n    getDiariesByUsername(){\r\n        return axios.get(`http://localhost:8080/api/diaries`)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new DiaryDataService;","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\Entry.jsx",["125","126","127","128","129","130"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Entry.css\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport { Box, Grid, Modal } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nfunction Entry(props) {\r\n  const [deleteModalState, setDeleteModalState] = useState(false);\r\n\r\n  const handleDeleteSubmition = () => {\r\n    // EntryDataService.deleteEntry()\r\n    //   .then(Window.lo)\r\n    //   .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <CardHeader\r\n        avatar={<BookIcon />}\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={props.title}\r\n        subheader={props.dateCreated}\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.message}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n      <Modal\r\n        className=\"Modal\"\r\n        isOpen={deleteModalState}\r\n        onRequestClose={() => setDeleteModalState(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"white\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"delete-center-screen\">\r\n          <div className=\"delete-form-box\">\r\n            <form onSubmit={() => handleDeleteSubmition()} className=\"\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h5\">\r\n                      Are you sure you want to delete your account?\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    Delete Account\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => setDeleteModalState(false)}\r\n                  >\r\n                    Keep Account\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Entry;\r\n",["131","132"],"C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\Entries.jsx",["133","134","135","136","137","138"],"import { Box, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { Component, useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Diary from \"../../SideNav/diary/Diary\";\r\nimport \"./Entries.css\";\r\nimport Entry from \"./Entry\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport EntryDataService from \"../../../service/EntryDataService\";\r\n\r\nfunction Entries(props) {\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  const diaryId = {\r\n    diaryId: props.match.params.diaryId,\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(diaryId);\r\n      const request = await EntryDataService.retrieveEntries(diaryId);\r\n      setEntries(request.data);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleNewEntryClick = () => {\r\n    props.history.push(`${props.match.params.diaryId}/entry`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"entries_container\">\r\n      <Box textAlign=\"center\">\r\n        <Grid container>\r\n          <Grid xs={4} item>\r\n            <Box m={6}>\r\n              <AddBoxIcon\r\n                className=\"add_entry_btn\"\r\n                fontSize=\"large\"\r\n                onClick={() => handleNewEntryClick()}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          <Grid xs={6} item>\r\n            <Box m={5}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Search Entries\"\r\n                variant=\"outlined\"\r\n                className=\"entries_search_box\"\r\n              />\r\n            </Box>\r\n          </Grid>\r\n\r\n          <Grid item xs={2}></Grid>\r\n          <Grid xs={12} item>\r\n            {entries.map((entry) => (\r\n              <Entry\r\n                key={entry.id}\r\n                title={entry.title}\r\n                message={entry.message}\r\n                dateCreated={entry.dateCreated}\r\n                // id={diary.id}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Entries;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\accountSettings\\AccountSettings.jsx",["139","140"],"import {\r\n  Grid,\r\n  Box,\r\n  Card,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Switch,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport UserDataService from \"../../../service/UserDataService\";\r\nimport Modal from \"react-modal\";\r\nimport \"./AccountSettings.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction AccountSettings(props) {\r\n  const [user, setUser] = useState({});\r\n  const [toggleState, setToggleState] = useState(false);\r\n  const [deleteModalState, setDeleteModalState] = useState(false);\r\n  const [passwordModalState, setPasswordModalState] = useState(false);\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      //await means to wait for response to comeback before doing something.\r\n      const request = await UserDataService.retrieveUser();\r\n      setUser(request.data);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDeleteSubmition = () => {\r\n    UserDataService.deleteUserByUsername()\r\n      .then(props.history.push(`../login`))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  function handleSubmition(event) {\r\n    event.preventDefault();\r\n\r\n    const userDetails = {\r\n      firstName: firstName.trim() === \"\" ? user.firstName : firstName,\r\n      lastName: lastName.trim() === \"\" ? user.lastName : lastName,\r\n      email: email.trim() === \"\" ? user.email : email,\r\n      username: username.trim() === \"\" ? user.username : username,\r\n    };\r\n    console.log(userDetails);\r\n    UserDataService.updateUserDetails(userDetails)\r\n      .then((response) => {\r\n        setUser(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    setToggleState(false);\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleToggle = () => {\r\n    toggleState === false ? setToggleState(true) : setToggleState(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box textAlign=\"center\" className=\"account_Settings_container\">\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={5}>\r\n          <Card className=\"settings_card profile_pic_settings\">\r\n            <Grid\r\n              container\r\n              direction=\"column\"\r\n              alignItems=\"center\"\r\n              justify=\"center\"\r\n              spacing={4}\r\n            >\r\n              <Grid item>\r\n                <Avatar\r\n                  style={{ height: \"8rem\", width: \"8rem\" }}\r\n                  className=\"avatar\"\r\n                >\r\n                  {/* {user.firstName.charAt(0)} */}\r\n                </Avatar>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h4\" fontWeight=\"fontWeightBold\">\r\n                  {user.firstName} <br /> {user.lastName}\r\n                </Typography>\r\n                <Typography style={{ marginTop: \"20px\" }}></Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <Card className=\"settings_card account_information_settings\">\r\n            <form\r\n              className\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={handleSubmition}\r\n              mx\r\n            >\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"h4\">Account Settings</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Switch\r\n                    checked={toggleState}\r\n                    onChange={handleToggle}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    defaultValue={user.firstName}\r\n                    key={user.firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                    helperText=\"First Name\"\r\n                    disabled={!toggleState}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    key={user.lastName}\r\n                    defaultValue={user.lastName}\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    helperText=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                    disabled={!toggleState}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    key={user.email}\r\n                    id=\"outlined-basic\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Email\"\r\n                    defaultValue={user.email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    disabled={!toggleState}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    key={user.username}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    helperText=\"Username\"\r\n                    defaultValue={user.username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    disabled={!toggleState}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={!toggleState}\r\n                  >\r\n                    Update Profile\r\n                  </Button>\r\n                  <Snackbar\r\n                    open={open}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleClose}\r\n                    message=\"Profile Updated!\"\r\n                  ></Snackbar>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Box m={1} display=\"inline\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={!toggleState}\r\n                      onClick={() => setPasswordModalState(true)}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </Box>\r\n                  <Box m={1} display=\"inline\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      disabled={!toggleState}\r\n                      onClick={() => setDeleteModalState(true)}\r\n                    >\r\n                      Delete Account\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Modal\r\n        className=\"Modal\"\r\n        isOpen={deleteModalState}\r\n        onRequestClose={() => setDeleteModalState(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"white\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"delete-center-screen\">\r\n          <div className=\"delete-form-box\">\r\n            <form onSubmit={() => handleDeleteSubmition()} className=\"\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Box textAlign=\"center\">\r\n                    <Typography variant=\"h5\">\r\n                      Are you sure you want to delete your account?\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                    Delete Account\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => setDeleteModalState(false)}\r\n                  >\r\n                    Keep Account\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        className=\"Modal\"\r\n        isOpen={passwordModalState}\r\n        onRequestClose={() => setPasswordModalState(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"white\",\r\n            background: \"rgba(0, 0, 0, 0.7)\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"delete-center-screen\">\r\n          <div className=\"delete-form-box\">\r\n            <form onSubmit={() => {}} className=\"\">\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <Typography variant=\"h5\">Password Change</Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"filled-basic\"\r\n                    label=\"Current Password\"\r\n                    name=\"prevPassword\"\r\n                    variant=\"filled\"\r\n                    onChange\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"filled-basic\"\r\n                    label=\"New Password\"\r\n                    name=\"newPassword\"\r\n                    variant=\"filled\"\r\n                    onChange\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\" onClick>\r\n                    Change Password\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\AppContainer\\AppContent\\entry\\EntryForm.jsx",["141","142"],"import { Box, Button, Grid, Paper, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EntryDataService from \"../../../service/EntryDataService\";\r\nimport \"./EntryForm.css\";\r\n\r\nfunction EntryForm(props) {\r\n  const [entry, setEntry] = useState(\"\");\r\n  const [entryTitle, setEntryTitle] = useState(\"\");\r\n\r\n  function handleEntrySubmition(event) {\r\n    event.preventDefault();\r\n\r\n    const entryForm = {\r\n      diaryId: props.match.params.diaryId,\r\n      message: entry,\r\n      title: entryTitle,\r\n    };\r\n\r\n    console.log(entryForm);\r\n\r\n    EntryDataService.createEntry(entryForm)\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    props.history.push(`/app`);\r\n  }\r\n\r\n  return (\r\n    <Box className=\"entry_paper\" boxShadow={3}>\r\n      <form onSubmit={handleEntrySubmition}>\r\n        <Grid\r\n          container\r\n          spacing={6}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid item xs={12} alignContent=\"center\" justify=\"center\">\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Entry Title\"\r\n              onChange={(e) => setEntryTitle(e.target.value)}\r\n              className=\"entry_fields\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              placeholder=\"Write Away!\"\r\n              multiline\r\n              name=\"entry\"\r\n              rows={20}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setEntry(e.target.value)}\r\n              rowsMax={Infinity}\r\n              className=\"entry_fields\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}></Grid>\r\n          <Grid item xs={12}>\r\n            <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\r\n              Done\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EntryForm;\r\n","C:\\Users\\Adegb\\Documents\\Java\\diary-app\\diary-app-frontend\\diary-app-frontend\\src\\components\\service\\EntryDataService.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"147","severity":1,"message":"151","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"153","line":75,"column":19,"nodeType":"154","endLine":75,"endColumn":30},{"ruleId":"147","severity":1,"message":"155","line":9,"column":10,"nodeType":"149","messageId":"150","endLine":9,"endColumn":14},{"ruleId":"147","severity":1,"message":"156","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":32},{"ruleId":"147","severity":1,"message":"157","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":19},{"ruleId":"147","severity":1,"message":"158","line":4,"column":27,"nodeType":"149","messageId":"150","endLine":4,"endColumn":33},{"ruleId":"147","severity":1,"message":"159","line":4,"column":35,"nodeType":"149","messageId":"150","endLine":4,"endColumn":40},{"ruleId":"147","severity":1,"message":"160","line":4,"column":42,"nodeType":"149","messageId":"150","endLine":4,"endColumn":48},{"ruleId":"161","severity":1,"message":"162","line":35,"column":7,"nodeType":"163","endLine":38,"endColumn":9},{"ruleId":"152","severity":1,"message":"153","line":80,"column":19,"nodeType":"154","endLine":80,"endColumn":30},{"ruleId":"147","severity":1,"message":"158","line":2,"column":27,"nodeType":"149","messageId":"150","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"164","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":9,"column":7,"nodeType":"163","endLine":9,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":27,"column":16,"nodeType":"167","messageId":"168","endLine":27,"endColumn":35,"fix":"169"},{"ruleId":"165","severity":1,"message":"166","line":16,"column":16,"nodeType":"167","messageId":"168","endLine":16,"endColumn":36,"fix":"170"},{"ruleId":"147","severity":1,"message":"171","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":12},{"ruleId":"147","severity":1,"message":"172","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17},{"ruleId":"147","severity":1,"message":"173","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":16},{"ruleId":"147","severity":1,"message":"174","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":14},{"ruleId":"147","severity":1,"message":"175","line":13,"column":10,"nodeType":"149","messageId":"150","endLine":13,"endColumn":13},{"ruleId":"147","severity":1,"message":"176","line":22,"column":7,"nodeType":"149","messageId":"150","endLine":22,"endColumn":16},{"ruleId":"143","replacedBy":"177"},{"ruleId":"145","replacedBy":"178"},{"ruleId":"147","severity":1,"message":"179","line":1,"column":32,"nodeType":"149","messageId":"150","endLine":1,"endColumn":42},{"ruleId":"147","severity":1,"message":"180","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"147","severity":1,"message":"181","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},{"ruleId":"147","severity":1,"message":"182","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"183","line":8,"column":10,"nodeType":"149","messageId":"150","endLine":8,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":26,"column":6,"nodeType":"186","endLine":26,"endColumn":8,"suggestions":"187"},{"ruleId":"147","severity":1,"message":"181","line":16,"column":10,"nodeType":"149","messageId":"150","endLine":16,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":121,"column":17,"nodeType":"154","endLine":121,"endColumn":28},{"ruleId":"147","severity":1,"message":"188","line":1,"column":29,"nodeType":"149","messageId":"150","endLine":1,"endColumn":34},{"ruleId":"147","severity":1,"message":"181","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":20},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'UserDataService' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'ContactSupportOutlined' is defined but never used.","'NoSelection' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Grid' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"191","text":"192"},{"range":"193","text":"192"},"'clsx' is defined but never used.","'CardMedia' is defined but never used.","'Collapse' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'useStyles' is assigned a value but never used.",["189"],["190"],"'Typography' is defined but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","'Diary' is defined but never used.","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'diaryId'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",[704,704],"()",[306,306],{"desc":"195","fix":"196"},"Update the dependencies array to be: [diaryId]",{"range":"197","text":"198"},[853,855],"[diaryId]"]